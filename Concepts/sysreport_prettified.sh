#!/bin/bash

# Exit if not ran as sudo
if [ $(id -u) != 0 ]; then
    echo "This tool needs to be run as sudo"
    exit 1
fi

# Format Variables
greentext="\033[32m"
bold="\033[1m"
normal="\033[0m"

# Script variables
logdate=$(date +"%Y%m%d")
logfile=/tmp/"$logdate"_report.log
dmi_processor_info=$(dmidecode -t processor)
dmi_bios_info=$(dmidecode -t bios)

# Script Functions
extract_info() {
    local info="$1"
    local field="$2"
    echo "$1" | awk -F : "BEGIN {IGNORECASE=1} /$2/ {print \$2}" | sed 's/^[ \t]*//'
}

print_info() {
    printf "$1\n" "${@:2}"
}

# Command variables
cpu_vendor=$(extract_info "$dmi_processor_info" "manufacturer")
cpu_type=$(extract_info "$dmi_processor_info" "family")
cpu_cores=$(extract_info "$dmi_processor_info" "core count")
cpu_threads=$(extract_info "$dmi_processor_info" "thread count")
bios_vendor=$(extract_info "$dmi_bios_info" "vendor")
bios_version=$(extract_info "$dmi_bios_info" "version")
disk_free=$(df -h / | grep -E "\/$" | awk '{print $4}')
mem_free=$(free -h | awk '/Mem:/ {print $4}')
mem_total=$(free -h | awk '/Mem:/ {print $2}')

# Report Content
{
    echo -e $bold"System report for "$greentext"$HOSTNAME"$normal
    print_info "\n"$bold"System Data"$normal"\t%s"
    print_info "System type:\t%s" "$MACHTYPE"
    print_info "BIOS Vendor:\t%s" "$bios_vendor"
    print_info "BIOS Version:\t%s" "$bios_version"
    print_info "Bash Version:\t%s" "$BASH_VERSION"

    print_info "\n"$bold"CPU Data"$normal"\t%s"
    print_info "CPU Vendor:\t%s" "$cpu_vendor"
    print_info "CPU Type:\t%s" "$cpu_type"
    print_info "CPU Cores:\t%s" "$cpu_cores"
    print_info "CPU Threads:\t%s" "$cpu_threads"

    print_info "\n"$bold"Hardware Data"$normal"\t%s"
    print_info "Mem Free:\t%s" "$mem_free"
    print_info "Mem Total:\t%s" "$mem_total"
    print_info "Disk Free:\t%s" "$disk_free"

    print_info "\n"$bold"Concept Content"$normal"\t%s"
    print_info "Files in dir:\t%s" "$(find . -maxdepth 1 -type f | wc -l)"
    print_info "Generated on:\t%s\n" "$(date '+%m/%d/%y')"
    echo -e $greentext"A summary of this info has been saved to $logfile"$normal
} | tee "$logfile"

cat <<- E0F >> $logfile

This report was automatically generated by a bash script.
It contains a brief summary of some system information.
E0F