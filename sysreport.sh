#!/bin/bash

# Exit if not ran as sudo
if [ $(id -u) != 0 ]; then
    echo "This tool needs to be run as sudo"
    exit 1
fi

# Format Variables
greentext="\033[32m"
bold="\033[1m"
normal="\033[0m"
logdate=$(date +"%Y%m%d")
logfile=/tmp/"$logdate"_report.log

# Cache dmidecode to prevent multiple executions
dmi_processor_info=$(dmidecode -t processor)
dmi_bios_info=$(dmidecode -t bios)

# Command variables
cpu_vendor=$(echo "$dmi_processor_info" | awk -F : 'BEGIN {IGNORECASE=1} /manufacturer/ {print $2}' | sed 's/^[ \t]*//')
cpu_type=$(echo "$dmi_processor_info" | awk -F : 'BEGIN {IGNORECASE=1} /family/ {print $2}' | sed 's/^[ \t]*//')
cpu_cores=$(echo "$dmi_processor_info" | awk -F : 'BEGIN {IGNORECASE=1} /core count/ {print $2}' | sed 's/^[ \t]*//')
cpu_threads=$(echo "$dmi_processor_info" | awk -F : 'BEGIN {IGNORECASE=1} /thread count/ {print $2}' | sed 's/^[ \t]*//')
bios_vendor=$(echo "$dmi_bios_info" | awk -F : 'BEGIN {IGNORECASE=1} /vendor/ {print $2}' | sed 's/^[ \t]*//')
bios_version=$(echo "$dmi_bios_info" | awk -F : 'BEGIN {IGNORECASE=1} /version/ {print $2}' | sed 's/^[ \t]*//')
disk_free=$(df -h / | grep -E "\/$" | awk '{print $4}')
mem_free=$(free -h | awk '/Mem:/ {print $4}')
mem_total=$(free -h | awk '/Mem:/ {print $2}')

# Report Content
{
    echo -e $bold"System report for "$greentext"$HOSTNAME"$normal
    printf "\n\t"$bold"System Data"$normal"\t%s\n"
    printf "\tSystem type:\t%s\n" "$MACHTYPE"
    printf "\tBIOS Vendor:\t%s\n" "$bios_vendor"
    printf "\tBIOS Version:\t%s\n" "$bios_version"
    printf "\tBash Version:\t%s\n" "$BASH_VERSION"

    printf "\n\t"$bold"CPU Data"$normal"\t%s\n"
    printf "\tCPU Vendor:\t%s\n" "$cpu_vendor"
    printf "\tCPU Type:\t%s\n" "$cpu_type"
    printf "\tCPU Cores:\t%s\n" "$cpu_cores"
    printf "\tCPU Threads:\t%s\n" "$cpu_threads"

    printf "\n\t"$bold"Hardware Data"$normal"\t%s\n"
    printf "\tMem Free:\t%s\n" "$mem_free"
    printf "\tMem Total:\t%s\n" "$mem_total"
    printf "\tDisk Free:\t%s\n" "$disk_free"
    printf "\tFiles in dir:\t%s\n" "$(ls | wc -l)"
    printf "\tGenerated on:\t%s\n\n" "$(date '+%m/%d/%y')"
    echo -e $greentext"A summary of this info has been saved to $logfile"$normal
} | tee "$logfile"

cat <<- E0F > $logfile

        This report was automatically generated by my bash script.
        It contains a brief summary of some system information.
E0F